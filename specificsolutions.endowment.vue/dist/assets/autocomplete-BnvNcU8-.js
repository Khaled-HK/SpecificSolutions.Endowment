import{_ as S}from"./AppAutocomplete-DX5DsSJ6.js";import{r as b,f as _,o as f,aR as g,m as u,e as l,b as t,dL as M,V as N,w as I,q as y,bc as F,bd as T,a_ as G,aY as U,aZ as W,bo as $,bn as L,dl as O,d as s,t as i}from"./index-BtfhVSwE.js";import{V as A}from"./VAutocomplete-DFOTlZAA.js";import{a as P}from"./VList-Cp76iGum.js";import{V as R}from"./VChip-DkJYynY0.js";import{a as p,V}from"./VRow-DRm1vRrS.js";import{_ as H}from"./AppCardCode-CQ5tVE_W.js";import"./form-DUL9ls8s.js";import"./VSelect-CV3yq3nX.js";import"./VTextField-BP9Yt9Bg.js";/* empty css                   */import"./VCounter-CfEBC7nV.js";import"./VImg-BKSypqLi.js";import"./VField-DiZdpAIN.js";import"./easing-CjukEv2V.js";import"./VInput-DIAfQwmh.js";import"./forwardRefs-C-GTDzx5.js";import"./dialog-transition-CRKIv97n.js";import"./VMenu-Cpm7zxfp.js";import"./VOverlay-BfQOvZM9.js";import"./delay-BDF9y9xB.js";import"./lazy-NLe1V18V.js";import"./scopeId-Cvig9lvB.js";import"./VCheckboxBtn-CPFIFhHb.js";import"./VSelectionControl-C7oASZhF.js";import"./VAvatar-Di7p70o_.js";import"./filter-BALRNvRS.js";import"./ssrBoot-BJLk6Iwd.js";import"./VDivider-BskaqePa.js";import"./VSlideGroup-BbCsdCyI.js";/* empty css              */import"./vue3-perfect-scrollbar-D_o356eN.js";import"./VCard-BMKvoKHc.js";import"./VCardText-CQ_kqBGy.js";const B={__name:"DemoAutocompleteValidation",setup(h){const o=["foo","bar","fizz","buzz"],e=b(["foo"]),c=[a=>!!a.length||"Select at least one option."];return(a,r)=>{const m=S;return f(),_(m,{modelValue:u(e),"onUpdate:modelValue":r[0]||(r[0]=n=>g(e)?e.value=n:null),items:o,rules:c,placeholder:"Select Option",multiple:""},null,8,["modelValue"])}}},z={__name:"DemoAutocompleteStateSelector",setup(h){const o=b(!1),e=b(null),c=["Alabama","Alaska","American Samoa","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","District of Columbia","Federated States of Micronesia","Florida","Georgia","Guam","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Marshall Islands","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Northern Mariana Islands","Ohio","Oklahoma","Oregon","Palau","Pennsylvania","Puerto Rico","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virgin Island","Virginia","Washington","West Virginia","Wisconsin","Wyoming"];return(a,r)=>{const m=S;return f(),_(m,{modelValue:u(e),"onUpdate:modelValue":r[1]||(r[1]=n=>g(e)?e.value=n:null),hint:u(o)?"Click the icon to save":"Click the icon to edit",placeholder:"Select Your State",items:c,readonly:!u(o),label:`State â€” ${u(o)?"Editable":"Readonly"}`,"persistent-hint":"","prepend-icon":"tabler-building","menu-props":{maxHeight:"200px"}},{append:l(()=>[t(M,{mode:"out-in"},{default:l(()=>[(f(),_(N,{key:`icon-${u(o)}`,color:u(o)?"success":"info",icon:u(o)?"tabler-checks":"tabler-edit-circle",onClick:r[0]||(r[0]=n=>o.value=!u(o))},null,8,["color","icon"]))]),_:1})]),_:1},8,["modelValue","hint","readonly","label"])}}},Y={__name:"DemoAutocompleteAsyncItems",setup(h){const o=b(!1),e=b(),c=b(null),a=["Alabama","Alaska","American Samoa","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","District of Columbia","Federated States of Micronesia","Florida","Georgia","Guam","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Marshall Islands","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Northern Mariana Islands","Ohio","Oklahoma","Oregon","Palau","Pennsylvania","Puerto Rico","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virgin Island","Virginia","Washington","West Virginia","Wisconsin","Wyoming"],r=b(a),m=n=>{o.value=!0,setTimeout(()=>{r.value=a.filter(d=>(d||"").toLowerCase().includes((n||"").toLowerCase())),o.value=!1},500)};return I(e,n=>{n&&n!==c.value&&m(n)}),(n,d)=>(f(),_(A,{modelValue:u(c),"onUpdate:modelValue":d[0]||(d[0]=v=>g(c)?c.value=v:null),search:u(e),"onUpdate:search":d[1]||(d[1]=v=>g(e)?e.value=v:null),loading:u(o),items:u(r),placeholder:"Search for a state",label:"What state are you from?",variant:"underlined","menu-props":{maxHeight:"200px"}},null,8,["modelValue","search","loading","items"]))}},J={__name:"DemoAutocompleteSlots",setup(h){const o=b(["Sandra Adams","Britta Holt"]),e=[{name:"Sandra Adams",group:"Group 1",avatar:F},{name:"Ali Connors",group:"Group 1",avatar:T},{name:"Trevor Hansen",group:"Group 1",avatar:G},{name:"Tucker Smith",group:"Group 1",avatar:U},{name:"Britta Holt",group:"Group 2",avatar:W},{name:"Jane Smith ",group:"Group 2",avatar:$},{name:"John Smith",group:"Group 2",avatar:L},{name:"Sandra Williams",group:"Group 2",avatar:O}];return(c,a)=>{const r=S;return f(),_(r,{modelValue:u(o),"onUpdate:modelValue":a[0]||(a[0]=m=>g(o)?o.value=m:null),chips:"","closable-chips":"",multiple:"",items:e,"item-title":"name","item-value":"name",placeholder:"Select User",label:"Select"},{chip:l(({props:m,item:n})=>[t(R,y(m,{"prepend-avatar":n.raw.avatar,text:n.raw.name}),null,16,["prepend-avatar","text"])]),item:l(({props:m,item:n})=>{var d,v,C;return[t(P,y(m,{"prepend-avatar":(d=n==null?void 0:n.raw)==null?void 0:d.avatar,title:(v=n==null?void 0:n.raw)==null?void 0:v.name,subtitle:(C=n==null?void 0:n.raw)==null?void 0:C.group}),null,16,["prepend-avatar","title","subtitle"])]}),_:1},8,["modelValue"])}}},K={__name:"DemoAutocompleteCustomFilter",setup(h){const o=[{name:"Florida",abbr:"FL",id:1},{name:"Georgia",abbr:"GA",id:2},{name:"Nebraska",abbr:"NE",id:3},{name:"California",abbr:"CA",id:4},{name:"New York",abbr:"NY",id:5}];function e(c,a,r){const m=r.raw.name.toLowerCase(),n=r.raw.abbr.toLowerCase(),d=a.toLowerCase();return m.includes(d)||n.includes(d)}return(c,a)=>{const r=S;return f(),_(r,{label:"States",items:o,"custom-filter":e,"item-title":"name","item-value":"abbr",placeholder:"Select State"})}}},E={__name:"DemoAutocompleteChips",setup(h){const o=["California","Colorado","Florida","Georgia","Texas","Wyoming"];return(e,c)=>{const a=S;return f(),_(a,{label:"States",items:o,placeholder:"Select State",chips:"",multiple:"","closable-chips":""})}}},j={__name:"DemoAutocompleteClearable",setup(h){const o=["California","Colorado","Florida","Georgia","Texas","Wyoming"];return(e,c)=>{const a=S;return f(),_(a,{label:"States",items:o,multiple:"",placeholder:"Select State",clearable:""})}}},q={__name:"DemoAutocompleteMultiple",setup(h){const o=["California","Colorado","Florida","Georgia","Texas","Wyoming"];return(e,c)=>{const a=S;return f(),_(a,{label:"States",items:o,placeholder:"Select State",multiple:"",eager:""})}}},X={__name:"DemoAutocompleteVariant",setup(h){const o=["California","Colorado","Florida","Georgia","Texas","Wyoming"];return(e,c)=>(f(),_(V,null,{default:l(()=>[t(p,{cols:"12",md:"6"},{default:l(()=>[t(A,{variant:"solo",label:"Solo",items:o,placeholder:"Select State"})]),_:1}),t(p,{cols:"12",md:"6"},{default:l(()=>[t(A,{variant:"outlined",label:"Outlined",placeholder:"Select State",items:o})]),_:1}),t(p,{cols:"12",md:"6"},{default:l(()=>[t(A,{variant:"underlined",label:"Underlined",placeholder:"Select State",items:o})]),_:1}),t(p,{cols:"12",md:"6"},{default:l(()=>[t(A,{variant:"filled",label:"Filled",placeholder:"Select State",items:o})]),_:1}),t(p,{cols:"12",md:"6"},{default:l(()=>[t(A,{variant:"plain",label:"Plain",placeholder:"Select State",items:o})]),_:1})]),_:1}))}},Z={__name:"DemoAutocompleteDensity",setup(h){const o=b("Florida"),e=["California","Colorado","Florida","Georgia","Texas","Wyoming"];return(c,a)=>{const r=S;return f(),_(r,{modelValue:u(o),"onUpdate:modelValue":a[0]||(a[0]=m=>g(o)?o.value=m:null),label:"States",density:"compact",placeholder:"Select State",items:e},null,8,["modelValue"])}}},Q={__name:"DemoAutocompleteBasic",setup(h){const o=["California","Colorado","Florida","Georgia","Texas","Wyoming"];return(e,c)=>{const a=S;return f(),_(a,{label:"States",items:o,placeholder:"Select State"})}}},ee={},te={},oe={},ae={},le={},ne={},se={},ie={},re={},ce={},me={},Ye={__name:"autocomplete",setup(h){return(o,e)=>{const c=Q,a=H,r=Z,m=X,n=q,d=j,v=E,C=K,w=J,x=Y,D=z,k=B;return f(),_(V,{class:"match-height"},{default:l(()=>[t(p,{cols:"12",md:"6"},{default:l(()=>[t(a,{title:"Basic",code:te},{default:l(()=>[e[0]||(e[0]=s("p",null,[i(" The "),s("code",null," v-autocomplete "),i(" component offers simple and flexible type-ahead functionality. This is useful when searching large sets of data or even dynamically fetching information from an API. ")],-1)),t(c)]),_:1},8,["code"])]),_:1}),t(p,{cols:"12",md:"6"},{default:l(()=>[t(a,{title:"Density",code:ne},{default:l(()=>[e[1]||(e[1]=s("p",null,[i(" You can use "),s("code",null," density "),i(" prop to adjusts vertical spacing within the component. Available options are: "),s("code",null,"default"),i(", "),s("code",null,"comfortable"),i(", and "),s("code",null,"compact"),i(". ")],-1)),t(r)]),_:1},8,["code"])]),_:1}),t(p,{cols:"12",md:"12"},{default:l(()=>[t(a,{title:"Variant",code:me},{default:l(()=>[e[2]||(e[2]=s("p",null,[i("Use "),s("code",null,"Solo"),i(", "),s("code",null,"Outlined"),i(", "),s("code",null,"Underlined"),i(", "),s("code",null,"Filled"),i(" and "),s("code",null,"Plain"),i(" options of "),s("code",null,"variant"),i(" prop to change the look of Autocomplete. ")],-1)),t(m)]),_:1},8,["code"])]),_:1}),t(p,{cols:"12",md:"6"},{default:l(()=>[t(a,{title:"Multiple",code:se},{default:l(()=>[e[3]||(e[3]=s("p",null,[i("Use "),s("code",null,"multiple"),i(" prop to select multiple. Accepts array for value")],-1)),t(n)]),_:1},8,["code"])]),_:1}),t(p,{cols:"12",md:"6"},{default:l(()=>[t(a,{title:"Clearable",code:ae},{default:l(()=>[e[4]||(e[4]=s("p",null,[i("Use "),s("code",null,"clearable"),i(" prop to add input clear functionality.")],-1)),t(d)]),_:1},8,["code"])]),_:1}),t(p,{cols:"12",md:"6"},{default:l(()=>[t(a,{title:"Chips",code:oe},{default:l(()=>[e[5]||(e[5]=s("p",null,[i("Use "),s("code",null," chips "),i(" prop to use chips in select.")],-1)),t(v)]),_:1},8,["code"])]),_:1}),t(p,{cols:"12",md:"6"},{default:l(()=>[t(a,{title:"Custom-Filter",code:le},{default:l(()=>[e[6]||(e[6]=s("p",null,[i("The "),s("code",null," custom-filter "),i(" prop can be used to filter each individual item with custom logic.In example we will filter state based on their name and abbreviations ")],-1)),t(C)]),_:1},8,["code"])]),_:1}),t(p,{cols:"12",md:"6"},{default:l(()=>[t(a,{title:"Slots",code:ie},{default:l(()=>[e[7]||(e[7]=s("p",null,"With the power of slots, you can customize the visual output of the select. In this example we add a profile picture for both the chips and list items using their props. ",-1)),t(w)]),_:1},8,["code"])]),_:1}),t(p,{cols:"12",md:"6"},{default:l(()=>[t(a,{title:"Async items",code:ee},{default:l(()=>[e[8]||(e[8]=s("p",null,"Sometimes you need to load data externally based upon a search query. ",-1)),t(x)]),_:1},8,["code"])]),_:1}),t(p,{cols:"12",md:"6"},{default:l(()=>[t(a,{title:"State Selector",code:re},{default:l(()=>[e[9]||(e[9]=s("p",null,"Using a combination of v-autocomplete slots and transitions, you can create a stylish toggle able autocomplete field such as below state selector.",-1)),t(D)]),_:1},8,["code"])]),_:1}),t(p,{cols:"12",md:"6"},{default:l(()=>[t(a,{title:"validation",code:ce},{default:l(()=>[e[10]||(e[10]=s("p",null,[i("Use "),s("code",null,"rules"),i(" prop to validate autocomplete. Accepts a mixed array of types function, boolean and string. Functions pass an input value as an argument and must return either true / false or a string containing an error message.")],-1)),t(k)]),_:1},8,["code"])]),_:1})]),_:1})}}};export{Ye as default};
